; Sample supervisor config file.
;
; For more information on the config file, please see:
; http://supervisord.org/configuration.html
;
; Notes:
;  - Shell expansion ("~" or "$HOME") is not supported.  Environment
;    variables can be expanded using this syntax: "%(ENV_HOME)s".
;  - Comments must have a leading space: "a=b ;comment" not "a=b;comment".

[unix_http_server]
file=/tmp/supervisor.sock   ; (the path to the socket file)
;chmod=0700                 ; socket file mode (default 0700)
;chown=nobody:nogroup       ; socket file uid:gid owner
;username=user              ; (default is no username (open server))
;password=123               ; (default is no password (open server))

[inet_http_server]         ; inet (TCP) server disabled by default
port=0.0.0.0:9001        ; (ip_address:port specifier, *:port for all iface)
;username=user              ; (default is no username (open server))
;password=123               ; (default is no password (open server))

[supervisord]
logfile=/tmp/supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB        ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10           ; (num of main logfile rotation backups;default 10)
loglevel=info                ; (log level;default info; others: debug,warn,trace)
pidfile=/tmp/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=false               ; (start in foreground if true;default false)
minfds=1024                  ; (min. avail startup file descriptors;default 1024)
minprocs=200                 ; (min. avail process descriptors;default 200)
;umask=022                   ; (process file creation umask;default 022)
;user=chrism                 ; (default is current user, required if root)
;identifier=supervisor       ; (supervisord identifier, default is 'supervisor')
;directory=/tmp              ; (default is not to cd during start)
;nocleanup=true              ; (don't clean up tempfiles at start;default false)
;childlogdir=/tmp            ; ('AUTO' child log dir, default $TEMP)
;environment=KEY="value"     ; (key value pairs to add to environment)
;strip_ansi=false            ; (strip ansi escape codes in logs; def. false)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket
serverurl=http://0.0.0.0:9001 ; use an http:// url to specify an inet socket
username=chris              ; should be same as http_username if set
password=123                ; should be same as http_password if set
;prompt=mysupervisor         ; cmd line prompt (default "supervisor")
;history_file=~/.sc_history  ; use readline history if available

; The below sample program section shows all possible program subsection values,
; create one or more 'real' program: sections to be able to control them under
; supervisor.

[program:run_django]
environment=
    DJANGO_SETTINGS_MODULE="%(ENV_DJANGO_SETTINGS_MODULE)s",
    POSTGRES_DB="%(ENV_POSTGRES_DB)s",
    POSTGRES_USER="%(ENV_POSTGRES_USER)s",
    POSTGRES_PASSWORD="%(ENV_POSTGRES_PASSWORD)s",
    POSTGRES_HOST="%(ENV_POSTGRES_HOST)s",
    AWS_ACCESS_KEY_ID="%(ENV_AWS_ACCESS_KEY_ID)s",
    AWS_SECRET_ACCESS_KEY="%(ENV_AWS_SECRET_ACCESS_KEY)s",
    CRM_HOST="%(ENV_CRM_HOST)s",
    MST_HOST="%(ENV_MST_HOST)s",
    FLOWER_BASIC_AUTH="%(ENV_FLOWER_BASIC_AUTH)s",
    SENTRY_KEY="%(ENV_SENTRY_KEY)s",
    SENTRY_PROJECT="%(ENV_SENTRY_PROJECT)s",
    REDIS_URL="%(ENV_REDIS_URL)s",
    NYLAS_OAUTH_CLIENT_ID="%(ENV_NYLAS_OAUTH_CLIENT_ID)s",
    NYLAS_OAUTH_CLIENT_SECRET="%(ENV_NYLAS_OAUTH_CLIENT_SECRET)s",
    NYLAS_SYNC_STEPS="%(ENV_NYLAS_SYNC_STEPS)s",
    NYLAS_SYNC_DAYS_LIMIT="%(ENV_NYLAS_SYNC_DAYS_LIMIT)s",
    PUSHER_APP_ID="%(ENV_PUSHER_APP_ID)s",
    PUSHER_KEY="%(ENV_PUSHER_KEY)s",
    PUSHER_SECRET="%(ENV_PUSHER_SECRET)s",
    PUSHER_CLUSTER="%(ENV_PUSHER_CLUSTER)s",
    TWILIO_ACCOUNT_SID="%(ENV_TWILIO_ACCOUNT_SID)s",
    TWILIO_AUTH_TOKEN="%(ENV_TWILIO_AUTH_TOKEN)s",
    TWIML_APPLICATION_SID="%(ENV_TWIML_APPLICATION_SID)s",
    CHAT_BOT_HOST="%(ENV_CHAT_BOT_HOST)s",
    REAL_PAGE_API_USERNAME="%(ENV_REAL_PAGE_API_USERNAME)s",
    REAL_PAGE_API_PASSWORD="%(ENV_REAL_PAGE_API_PASSWORD)s",
    REAL_PAGE_API_LICENSE_KEY="%(ENV_REAL_PAGE_API_LICENSE_KEY)s",
    RESMAN_INTEGRATION_PARTNER_ID="%(ENV_RESMAN_INTEGRATION_PARTNER_ID)s",
    RESMAN_API_KEY="%(ENV_RESMAN_API_KEY)s",
    SMART_RENT_EMAIL="%(ENV_SMART_RENT_EMAIL)s",
    SMART_RENT_PASSWORD="%(ENV_SMART_RENT_PASSWORD)s",
    ON_SITE_USERNAME="%(ENV_ON_SITE_USERNAME)s",
    ON_SITE_PASSWORD="%(ENV_ON_SITE_PASSWORD)s",
    YARDI_TOKEN="%(ENV_YARDI_TOKEN)s",
    TWILIO_STUDIO_ID="%(ENV_TWILIO_STUDIO_ID)s",
    RASA_X_DB_NAME="%(ENV_RASA_X_DB_NAME)s",
    RASA_X_DB_HOST="%(ENV_RASA_X_DB_HOST)s",
    RASA_X_DB_USER="%(ENV_RASA_X_DB_USER)s",
    RASA_X_DB_PASSWORD="%(ENV_RASA_X_DB_PASSWORD)s",
    HF_USERNAME="%(ENV_HF_USERNAME)s",
    HF_PASSWORD="%(ENV_HF_PASSWORD)s",
    HF_CONVERSATION_SOURCE="%(ENV_HF_CONVERSATION_SOURCE)s",
    RASA_TOKEN="%(ENV_RASA_TOKEN)s",
    RASA_WORKER_HOST="%(ENV_RASA_WORKER_HOST)s",
    RABBIT_URL="%(ENV_RABBIT_URL)s",
    DEMO_TOUR_NYLAS_ACCESS_TOKEN="%(ENV_DEMO_TOUR_NYLAS_ACCESS_TOKEN)s",
    DEMO_TOUR_NYLAS_CALENDAR_ID="%(ENV_DEMO_TOUR_NYLAS_CALENDAR_ID)s",
    DWELL_TOUR_PARTICIPANT_EMAIL="%(ENV_DWELL_TOUR_PARTICIPANT_EMAIL)s",
    HOBBES_AUTO_TEST_REPORT_EMAIL="%(ENV_HOBBES_AUTO_TEST_REPORT_EMAIL)s"
command=gunicorn backend.wsgi:application -w 4 -b 0.0.0.0:8000 -t 300 --max-requests=100
directory=/home/ubuntu/crm/
user=ubuntu
stdout_logfile=/home/ubuntu/logs/django_stdout.log
stderr_logfile=/home/ubuntu/logs/django_stderr.log
autorestart=true
redirect_stderr=true

[program:run_celery_worker]
environment=
    DJANGO_SETTINGS_MODULE="%(ENV_DJANGO_SETTINGS_MODULE)s",
    POSTGRES_DB="%(ENV_POSTGRES_DB)s",
    POSTGRES_USER="%(ENV_POSTGRES_USER)s",
    POSTGRES_PASSWORD="%(ENV_POSTGRES_PASSWORD)s",
    POSTGRES_HOST="%(ENV_POSTGRES_HOST)s",
    AWS_ACCESS_KEY_ID="%(ENV_AWS_ACCESS_KEY_ID)s",
    AWS_SECRET_ACCESS_KEY="%(ENV_AWS_SECRET_ACCESS_KEY)s",
    CRM_HOST="%(ENV_CRM_HOST)s",
    MST_HOST="%(ENV_MST_HOST)s",
    FLOWER_BASIC_AUTH="%(ENV_FLOWER_BASIC_AUTH)s",
    SENTRY_KEY="%(ENV_SENTRY_KEY)s",
    SENTRY_PROJECT="%(ENV_SENTRY_PROJECT)s",
    REDIS_URL="%(ENV_REDIS_URL)s",
    NYLAS_OAUTH_CLIENT_ID="%(ENV_NYLAS_OAUTH_CLIENT_ID)s",
    NYLAS_OAUTH_CLIENT_SECRET="%(ENV_NYLAS_OAUTH_CLIENT_SECRET)s",
    NYLAS_SYNC_STEPS="%(ENV_NYLAS_SYNC_STEPS)s",
    NYLAS_SYNC_DAYS_LIMIT="%(ENV_NYLAS_SYNC_DAYS_LIMIT)s",
    PUSHER_APP_ID="%(ENV_PUSHER_APP_ID)s",
    PUSHER_KEY="%(ENV_PUSHER_KEY)s",
    PUSHER_SECRET="%(ENV_PUSHER_SECRET)s",
    PUSHER_CLUSTER="%(ENV_PUSHER_CLUSTER)s",
    FE_SENTRY_KEY="%(ENV_FE_SENTRY_KEY)s",
    FE_SENTRY_PROJECT="%(ENV_FE_SENTRY_PROJECT)s",
    TWILIO_ACCOUNT_SID="%(ENV_TWILIO_ACCOUNT_SID)s",
    TWILIO_AUTH_TOKEN="%(ENV_TWILIO_AUTH_TOKEN)s",
    TWIML_APPLICATION_SID="%(ENV_TWIML_APPLICATION_SID)s",
    CHAT_BOT_HOST="%(ENV_CHAT_BOT_HOST)s",
    REAL_PAGE_API_USERNAME="%(ENV_REAL_PAGE_API_USERNAME)s",
    REAL_PAGE_API_PASSWORD="%(ENV_REAL_PAGE_API_PASSWORD)s",
    REAL_PAGE_API_LICENSE_KEY="%(ENV_REAL_PAGE_API_LICENSE_KEY)s",
    RESMAN_INTEGRATION_PARTNER_ID="%(ENV_RESMAN_INTEGRATION_PARTNER_ID)s",
    RESMAN_API_KEY="%(ENV_RESMAN_API_KEY)s",
    SMART_RENT_EMAIL="%(ENV_SMART_RENT_EMAIL)s",
    SMART_RENT_PASSWORD="%(ENV_SMART_RENT_PASSWORD)s",
    ON_SITE_USERNAME="%(ENV_ON_SITE_USERNAME)s",
    ON_SITE_PASSWORD="%(ENV_ON_SITE_PASSWORD)s",
    YARDI_TOKEN="%(ENV_YARDI_TOKEN)s",
    TWILIO_STUDIO_ID="%(ENV_TWILIO_STUDIO_ID)s",
    RASA_X_DB_NAME="%(ENV_RASA_X_DB_NAME)s",
    RASA_X_DB_HOST="%(ENV_RASA_X_DB_HOST)s",
    RASA_X_DB_USER="%(ENV_RASA_X_DB_USER)s",
    RASA_X_DB_PASSWORD="%(ENV_RASA_X_DB_PASSWORD)s",
    HF_USERNAME="%(ENV_HF_USERNAME)s",
    HF_PASSWORD="%(ENV_HF_PASSWORD)s",
    HF_CONVERSATION_SOURCE="%(ENV_HF_CONVERSATION_SOURCE)s",
    RASA_TOKEN="%(ENV_RASA_TOKEN)s",
    RASA_WORKER_HOST="%(ENV_RASA_WORKER_HOST)s",
    RABBIT_URL="%(ENV_RABBIT_URL)s",
    DEMO_TOUR_NYLAS_ACCESS_TOKEN="%(ENV_DEMO_TOUR_NYLAS_ACCESS_TOKEN)s",
    DEMO_TOUR_NYLAS_CALENDAR_ID="%(ENV_DEMO_TOUR_NYLAS_CALENDAR_ID)s",
    DWELL_TOUR_PARTICIPANT_EMAIL="%(ENV_DWELL_TOUR_PARTICIPANT_EMAIL)s",
    HOBBES_AUTO_TEST_REPORT_EMAIL="%(ENV_HOBBES_AUTO_TEST_REPORT_EMAIL)s"
command=celery -A crm --app=backend.celery_app:app worker --autoscale=3,10 -l debug --without-heartbeat -Q celery,nylas_webhook,prospect_availability,compete
directory=/home/ubuntu/crm/
user=ubuntu
stdout_logfile=/home/ubuntu/logs/celery_worker_stdout.log
stderr_logfile=/home/ubuntu/logs/celery_worker_stderr.log
autorestart=true
redirect_stderr=true

[program:run_celery_beat]
environment=
    DJANGO_SETTINGS_MODULE="%(ENV_DJANGO_SETTINGS_MODULE)s",
    POSTGRES_DB="%(ENV_POSTGRES_DB)s",
    POSTGRES_USER="%(ENV_POSTGRES_USER)s",
    POSTGRES_PASSWORD="%(ENV_POSTGRES_PASSWORD)s",
    POSTGRES_HOST="%(ENV_POSTGRES_HOST)s",
    AWS_ACCESS_KEY_ID="%(ENV_AWS_ACCESS_KEY_ID)s",
    AWS_SECRET_ACCESS_KEY="%(ENV_AWS_SECRET_ACCESS_KEY)s",
    CRM_HOST="%(ENV_CRM_HOST)s",
    MST_HOST="%(ENV_MST_HOST)s",
    FLOWER_BASIC_AUTH="%(ENV_FLOWER_BASIC_AUTH)s",
    SENTRY_KEY="%(ENV_SENTRY_KEY)s",
    SENTRY_PROJECT="%(ENV_SENTRY_PROJECT)s",
    REDIS_URL="%(ENV_REDIS_URL)s",
    NYLAS_OAUTH_CLIENT_ID="%(ENV_NYLAS_OAUTH_CLIENT_ID)s",
    NYLAS_OAUTH_CLIENT_SECRET="%(ENV_NYLAS_OAUTH_CLIENT_SECRET)s",
    NYLAS_SYNC_STEPS="%(ENV_NYLAS_SYNC_STEPS)s",
    NYLAS_SYNC_DAYS_LIMIT="%(ENV_NYLAS_SYNC_DAYS_LIMIT)s",
    PUSHER_APP_ID="%(ENV_PUSHER_APP_ID)s",
    PUSHER_KEY="%(ENV_PUSHER_KEY)s",
    PUSHER_SECRET="%(ENV_PUSHER_SECRET)s",
    PUSHER_CLUSTER="%(ENV_PUSHER_CLUSTER)s",
    FE_SENTRY_KEY="%(ENV_FE_SENTRY_KEY)s",
    FE_SENTRY_PROJECT="%(ENV_FE_SENTRY_PROJECT)s",
    SINGLE_BEAT_REDIS_SERVER="%(ENV_SINGLE_BEAT_REDIS_SERVER)s",
    SINGLE_BEAT_LOG_LEVEL="debug",
    SINGLE_BEAT_WAIT_BEFORE_DIE="10",
    SINGLE_BEAT_WAIT_MODE="supervised",
    SINGLE_BEAT_IDENTIFIER="'celery-beat'",
    TWILIO_ACCOUNT_SID="%(ENV_TWILIO_ACCOUNT_SID)s",
    TWILIO_AUTH_TOKEN="%(ENV_TWILIO_AUTH_TOKEN)s",
    TWIML_APPLICATION_SID="%(ENV_TWIML_APPLICATION_SID)s",
    CHAT_BOT_HOST="%(ENV_CHAT_BOT_HOST)s",
    REAL_PAGE_API_USERNAME="%(ENV_REAL_PAGE_API_USERNAME)s",
    REAL_PAGE_API_PASSWORD="%(ENV_REAL_PAGE_API_PASSWORD)s",
    REAL_PAGE_API_LICENSE_KEY="%(ENV_REAL_PAGE_API_LICENSE_KEY)s",
    RESMAN_INTEGRATION_PARTNER_ID="%(ENV_RESMAN_INTEGRATION_PARTNER_ID)s",
    RESMAN_API_KEY="%(ENV_RESMAN_API_KEY)s",
    SMART_RENT_EMAIL="%(ENV_SMART_RENT_EMAIL)s",
    SMART_RENT_PASSWORD="%(ENV_SMART_RENT_PASSWORD)s",
    ON_SITE_USERNAME="%(ENV_ON_SITE_USERNAME)s",
    ON_SITE_PASSWORD="%(ENV_ON_SITE_PASSWORD)s",
    YARDI_TOKEN="%(ENV_YARDI_TOKEN)s",
    TWILIO_STUDIO_ID="%(ENV_TWILIO_STUDIO_ID)s",
    RASA_X_DB_NAME="%(ENV_RASA_X_DB_NAME)s",
    RASA_X_DB_HOST="%(ENV_RASA_X_DB_HOST)s",
    RASA_X_DB_USER="%(ENV_RASA_X_DB_USER)s",
    RASA_X_DB_PASSWORD="%(ENV_RASA_X_DB_PASSWORD)s",
    HF_USERNAME="%(ENV_HF_USERNAME)s",
    HF_PASSWORD="%(ENV_HF_PASSWORD)s",
    HF_CONVERSATION_SOURCE="%(ENV_HF_CONVERSATION_SOURCE)s",
    RASA_TOKEN="%(ENV_RASA_TOKEN)s",
    RASA_WORKER_HOST="%(ENV_RASA_WORKER_HOST)s",
    RABBIT_URL="%(ENV_RABBIT_URL)s",
    DEMO_TOUR_NYLAS_ACCESS_TOKEN="%(ENV_DEMO_TOUR_NYLAS_ACCESS_TOKEN)s",
    DEMO_TOUR_NYLAS_CALENDAR_ID="%(ENV_DEMO_TOUR_NYLAS_CALENDAR_ID)s",
    DWELL_TOUR_PARTICIPANT_EMAIL="%(ENV_DWELL_TOUR_PARTICIPANT_EMAIL)s",
    HOBBES_AUTO_TEST_REPORT_EMAIL="%(ENV_HOBBES_AUTO_TEST_REPORT_EMAIL)s"
command=single-beat celery -A crm --app=backend.celery_app:app beat -l debug --pidfile /tmp/celerybeat.pid --schedule=/tmp/celerybeat-schedule
directory=/home/ubuntu/crm/
user=ubuntu
stdout_logfile=/home/ubuntu/logs/celery_beat_stdout.log
stderr_logfile=/home/ubuntu/logs/celery_beat_stderr.log
autorestart=true
redirect_stderr=true

[program:run_flower]
environment=
    DJANGO_SETTINGS_MODULE="%(ENV_DJANGO_SETTINGS_MODULE)s",
    POSTGRES_DB="%(ENV_POSTGRES_DB)s",
    POSTGRES_USER="%(ENV_POSTGRES_USER)s",
    POSTGRES_PASSWORD="%(ENV_POSTGRES_PASSWORD)s",
    POSTGRES_HOST="%(ENV_POSTGRES_HOST)s",
    AWS_ACCESS_KEY_ID="%(ENV_AWS_ACCESS_KEY_ID)s",
    AWS_SECRET_ACCESS_KEY="%(ENV_AWS_SECRET_ACCESS_KEY)s",
    CRM_HOST="%(ENV_CRM_HOST)s",
    MST_HOST="%(ENV_MST_HOST)s",
    FLOWER_BASIC_AUTH="%(ENV_FLOWER_BASIC_AUTH)s",
    SENTRY_KEY="%(ENV_SENTRY_KEY)s",
    SENTRY_PROJECT="%(ENV_SENTRY_PROJECT)s",
    REDIS_URL="%(ENV_REDIS_URL)s",
    CHAT_BOT_HOST="%(ENV_CHAT_BOT_HOST)s",
    REAL_PAGE_API_USERNAME="%(ENV_REAL_PAGE_API_USERNAME)s",
    REAL_PAGE_API_PASSWORD="%(ENV_REAL_PAGE_API_PASSWORD)s",
    REAL_PAGE_API_LICENSE_KEY="%(ENV_REAL_PAGE_API_LICENSE_KEY)s",
    RESMAN_INTEGRATION_PARTNER_ID="%(ENV_RESMAN_INTEGRATION_PARTNER_ID)s",
    RESMAN_API_KEY="%(ENV_RESMAN_API_KEY)s",
    SMART_RENT_EMAIL="%(ENV_SMART_RENT_EMAIL)s",
    SMART_RENT_PASSWORD="%(ENV_SMART_RENT_PASSWORD)s",
    ON_SITE_USERNAME="%(ENV_ON_SITE_USERNAME)s",
    ON_SITE_PASSWORD="%(ENV_ON_SITE_PASSWORD)s",
    YARDI_TOKEN="%(ENV_YARDI_TOKEN)s",
    TWILIO_STUDIO_ID="%(ENV_TWILIO_STUDIO_ID)s",
    RABBIT_URL="%(ENV_RABBIT_URL)s"
command=flower -A crm --app=backend.celery_app:app
directory=/home/ubuntu/crm/
user=ubuntu
stdout_logfile=/home/ubuntu/logs/flower_stdout.log
stderr_logfile=/home/ubuntu/logs/flower_stderr.log
autorestart=true
redirect_stderr=true

;[program:theprogramname]
;command=/bin/cat              ; the program (relative uses PATH, can take args)
;process_name=%(program_name)s ; process_name expr (default %(program_name)s)
;numprocs=1                    ; number of processes copies to start (def 1)
;directory=/tmp                ; directory to cwd to before exec (def no cwd)
;umask=022                     ; umask for process (default None)
;priority=999                  ; the relative start priority (default 999)
;autostart=true                ; start at supervisord start (default: true)
;startsecs=1                   ; # of secs prog must stay up to be running (def. 1)
;startretries=3                ; max # of serial start failures when starting (default 3)
;autorestart=unexpected        ; when to restart if exited after running (def: unexpected)
;exitcodes=0,2                 ; 'expected' exit codes used with autorestart (default 0,2)
;stopsignal=QUIT               ; signal used to kill process (default TERM)
;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)
;stopasgroup=false             ; send stop signal to the UNIX process group (default false)
;killasgroup=false             ; SIGKILL the UNIX process group (def false)
;user=chrism                   ; setuid to this UNIX account to run the program
;redirect_stderr=true          ; redirect proc stderr to stdout (default false)
;stdout_logfile=/a/path        ; stdout log path, NONE for none; default AUTO
;stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stdout_logfile_backups=10     ; # of stdout logfile backups (default 10)
;stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;stdout_events_enabled=false   ; emit events on stdout writes (default false)
;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO
;stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stderr_logfile_backups=10     ; # of stderr logfile backups (default 10)
;stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;stderr_events_enabled=false   ; emit events on stderr writes (default false)
;environment=A="1",B="2"       ; process environment additions (def no adds)
;serverurl=AUTO                ; override serverurl computation (childutils)

; The below sample eventlistener section shows all possible
; eventlistener subsection values, create one or more 'real'
; eventlistener: sections to be able to handle event notifications
; sent by supervisor.

;[eventlistener:theeventlistenername]
;command=/bin/eventlistener    ; the program (relative uses PATH, can take args)
;process_name=%(program_name)s ; process_name expr (default %(program_name)s)
;numprocs=1                    ; number of processes copies to start (def 1)
;events=EVENT                  ; event notif. types to subscribe to (req'd)
;buffer_size=10                ; event buffer queue size (default 10)
;directory=/tmp                ; directory to cwd to before exec (def no cwd)
;umask=022                     ; umask for process (default None)
;priority=-1                   ; the relative start priority (default -1)
;autostart=true                ; start at supervisord start (default: true)
;startsecs=1                   ; # of secs prog must stay up to be running (def. 1)
;startretries=3                ; max # of serial start failures when starting (default 3)
;autorestart=unexpected        ; autorestart if exited after running (def: unexpected)
;exitcodes=0,2                 ; 'expected' exit codes used with autorestart (default 0,2)
;stopsignal=QUIT               ; signal used to kill process (default TERM)
;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)
;stopasgroup=false             ; send stop signal to the UNIX process group (default false)
;killasgroup=false             ; SIGKILL the UNIX process group (def false)
;user=chrism                   ; setuid to this UNIX account to run the program
;redirect_stderr=false         ; redirect_stderr=true is not allowed for eventlisteners
;stdout_logfile=/a/path        ; stdout log path, NONE for none; default AUTO
;stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stdout_logfile_backups=10     ; # of stdout logfile backups (default 10)
;stdout_events_enabled=false   ; emit events on stdout writes (default false)
;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO
;stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stderr_logfile_backups=10     ; # of stderr logfile backups (default 10)
;stderr_events_enabled=false   ; emit events on stderr writes (default false)
;environment=A="1",B="2"       ; process environment additions
;serverurl=AUTO                ; override serverurl computation (childutils)

; The below sample group section shows all possible group values,
; create one or more 'real' group: sections to create "heterogeneous"
; process groups.

;[group:thegroupname]
;programs=progname1,progname2  ; each refers to 'x' in [program:x] definitions
;priority=999                  ; the relative start priority (default 999)

; The [include] section can just contain the "files" setting.  This
; setting can list multiple files (separated by whitespace or
; newlines).  It can also contain wildcards.  The filenames are
; interpreted as relative to this file.  Included files *cannot*
; include files themselves.

;[include]
;files = relative/directory/*.ini
