# Generated by Django 2.2.13 on 2021-04-06 08:09

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('api', '0213_auto_20210331_0458'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128)),
                ('type', models.CharField(choices=[('BENCHMARK', 'Benchmark'), ('THRESHOLD', 'Threshold')], default='BENCHMARK', max_length=32)),
                ('baseline', models.CharField(blank=True, choices=[('PREVIOUS_DAY', 'Previous Day'), ('LAST_WEEK', 'Last Week'), ('LAST_4_WEEKS', 'Last 4 Weeks')], max_length=32, null=True)),
                ('condition_subject', models.CharField(blank=True, choices=[('RENT', 'Rent'), ('OCCUPANCY', 'Occupancy'), ('CONCESSION', 'Concession')], max_length=32, null=True)),
                ('condition_type', models.CharField(blank=True, choices=[('INCREASES', 'Increases'), ('DECREASES', 'Decreases'), ('INCREASES_OR_DECREASES', 'Increases or Decreases')], max_length=32, null=True)),
                ('condition_value', models.FloatField(blank=True, null=True)),
                ('condition_unit_type', models.CharField(blank=True, choices=[('STUDIO', 'Studio'), ('ONE_BEDROOM', '1 bedroom'), ('TWO_BEDROOM', '2 bedroom'), ('THREE_BEDROOM', '3 bedroom'), ('FOUR_BEDROOM', '4 bedroom'), ('FIVE_BEDROOM', '5 bedroom'), ('COMBINED', 'Combined')], max_length=32, null=True)),
                ('track_assets_mode', models.CharField(choices=[('ASSETS_IN_MARKETS', 'All assets in markets'), ('ASSETS_IN_SUB_MARKETS', 'All assets in sub markets'), ('CUSTOM_ASSETS', 'Custom set of assets')], default='ASSETS_IN_MARKETS', max_length=32)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'In active')], default='ACTIVE', max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='AlertLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(blank=True, null=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('sent_on', models.DateTimeField()),
                ('condition_subject', models.CharField(blank=True, choices=[('RENT', 'Rent'), ('OCCUPANCY', 'Occupancy'), ('CONCESSION', 'Concession')], max_length=32, null=True)),
                ('baseline', models.CharField(blank=True, choices=[('PREVIOUS_DAY', 'Previous Day'), ('LAST_WEEK', 'Last Week'), ('LAST_4_WEEKS', 'Last 4 Weeks')], max_length=32, null=True)),
                ('condition_unit_type', models.CharField(blank=True, choices=[('STUDIO', 'Studio'), ('ONE_BEDROOM', '1 bedroom'), ('TWO_BEDROOM', '2 bedroom'), ('THREE_BEDROOM', '3 bedroom'), ('FOUR_BEDROOM', '4 bedroom'), ('FIVE_BEDROOM', '5 bedroom'), ('COMBINED', 'Combined')], max_length=32, null=True)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='compete.Alert')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AlertLogDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('occupancy', models.FloatField(blank=True, null=True)),
                ('occupancy_last_day', models.FloatField(blank=True, null=True)),
                ('occupancy_last_week', models.FloatField(blank=True, null=True)),
                ('occupancy_last_4_weeks', models.FloatField(blank=True, null=True)),
                ('concession_amount', models.FloatField(blank=True, null=True)),
                ('concession_amount_last_day', models.FloatField(blank=True, null=True)),
                ('concession_amount_last_week', models.FloatField(blank=True, null=True)),
                ('concession_amount_last_4_weeks', models.FloatField(blank=True, null=True)),
                ('concession_avg_rent_percent', models.FloatField(blank=True, null=True)),
                ('concession_avg_rent_percent_last_day', models.FloatField(blank=True, null=True)),
                ('concession_avg_rent_percent_last_week', models.FloatField(blank=True, null=True)),
                ('concession_avg_rent_percent_last_4_weeks', models.FloatField(blank=True, null=True)),
                ('is_offering_concession', models.BooleanField(default=False)),
                ('alert_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='log_details', to='compete.AlertLog')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comparison',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('subject_asset_type', models.CharField(choices=[('SUB_MARKET', 'SUB_MARKET'), ('PROPERTY', 'PROPERTY')], default='SUB_MARKET', max_length=32)),
                ('compared_asset_type', models.CharField(choices=[('MARKET', 'MARKET'), ('SUB_MARKET', 'SUB_MARKET'), ('PROPERTY', 'PROPERTY'), ('COMPETITORS', 'COMPETITORS')], default='MARKET', max_length=32)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('s3_name', models.CharField(blank=True, max_length=128, null=True)),
                ('external_id', models.CharField(blank=True, max_length=128, null=True)),
                ('address', models.CharField(blank=True, max_length=512, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=32, null=True)),
                ('website', models.CharField(blank=True, max_length=512, null=True)),
                ('units_count', models.IntegerField(blank=True, null=True)),
                ('concession_description', models.CharField(blank=True, max_length=128, null=True)),
                ('concession_amount', models.FloatField(blank=True, null=True)),
                ('amenities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=256, null=True), default=list, size=None)),
                ('communities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=256, null=True), default=list, size=None)),
                ('average_rent', models.FloatField(blank=True, null=True)),
                ('average_rent_per_sqft', models.FloatField(blank=True, null=True)),
                ('occupancy', models.FloatField(blank=True, null=True)),
                ('competitors', models.ManyToManyField(related_name='reserved_competitors', to='compete.Property')),
                ('property', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compete_property', to='api.Property', verbose_name='Dwell Property')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('occupancy', models.FloatField(blank=True, null=True)),
                ('available_units', models.IntegerField(blank=True, null=True)),
                ('total_units', models.IntegerField(blank=True, null=True)),
                ('concession', models.FloatField(blank=True, null=True)),
                ('concession_avg_rent_percent', models.FloatField(blank=True, null=True)),
                ('date', models.DateField()),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='compete.Property')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Submarket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('market', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submarkets', to='compete.Market')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WatchList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_stored', models.BooleanField(default=False)),
                ('comparison', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='watch_lists', to='compete.Comparison')),
                ('market', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='watch_lists', to='compete.Market')),
                ('property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='watch_lists', to='compete.Property')),
                ('submarket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='watch_lists', to='compete.Submarket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watch_lists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnitType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('beds', models.FloatField(blank=True, null=True)),
                ('baths', models.FloatField(blank=True, null=True)),
                ('average_rent', models.FloatField(blank=True, null=True)),
                ('average_size', models.FloatField(blank=True, null=True)),
                ('units_count', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(choices=[('STUDIO', 'Studio'), ('ONE_BEDROOM', '1 bedroom'), ('TWO_BEDROOM', '2 bedroom'), ('THREE_BEDROOM', '3 bedroom'), ('FOUR_BEDROOM', '4 bedroom'), ('FIVE_BEDROOM', '5 bedroom')], default='ONE_BEDROOM', max_length=16)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_types', to='compete.Property')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnitRentReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('unit_type', models.CharField(choices=[('STUDIO', 'Studio'), ('ONE_BEDROOM', '1 bedroom'), ('TWO_BEDROOM', '2 bedroom'), ('THREE_BEDROOM', '3 bedroom'), ('FOUR_BEDROOM', '4 bedroom'), ('FIVE_BEDROOM', '5 bedroom'), ('COMBINED', 'Combined')], max_length=32)),
                ('rent_sum', models.FloatField(blank=True, null=True)),
                ('sqft_sum', models.FloatField(blank=True, null=True)),
                ('units_count', models.FloatField(blank=True, null=True)),
                ('min_rent', models.FloatField(blank=True, null=True)),
                ('max_rent', models.FloatField(blank=True, null=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_rent_reports', to='compete.Property')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_rent_reports', to='compete.Report')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('number', models.CharField(blank=True, max_length=64, null=True)),
                ('floor_plan_name', models.CharField(blank=True, max_length=128, null=True)),
                ('beds', models.FloatField(blank=True, null=True)),
                ('baths', models.FloatField(blank=True, null=True)),
                ('unit_size', models.FloatField(blank=True, null=True)),
                ('rent', models.FloatField(blank=True, null=True)),
                ('available_date', models.DateField(blank=True, null=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='compete.Property')),
                ('unit_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='units', to='compete.UnitType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='property',
            name='submarket',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='properties', to='compete.Submarket'),
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('item_id', models.CharField(blank=True, max_length=32, null=True)),
                ('specials', models.CharField(blank=True, max_length=512, null=True)),
                ('type', models.CharField(blank=True, max_length=64, null=True)),
                ('floor_plan', models.CharField(blank=True, max_length=64, null=True)),
                ('beds', models.FloatField(blank=True, null=True)),
                ('baths', models.FloatField(blank=True, null=True)),
                ('sqft', models.FloatField(blank=True, null=True)),
                ('floor_plan_url', models.CharField(blank=True, max_length=256, null=True)),
                ('apartment', models.CharField(blank=True, max_length=32, null=True)),
                ('rent', models.FloatField(blank=True, null=True)),
                ('available_date', models.CharField(blank=True, max_length=64, null=True)),
                ('address', models.CharField(blank=True, max_length=512, null=True)),
                ('phone', models.CharField(blank=True, max_length=64, null=True)),
                ('website', models.CharField(blank=True, max_length=512, null=True)),
                ('communities', models.TextField(blank=True, null=True)),
                ('amenities', models.TextField(blank=True, null=True)),
                ('unparsed_unit_type', models.CharField(blank=True, max_length=128, null=True)),
                ('unparsed_rent', models.CharField(blank=True, max_length=128, null=True)),
                ('unparsed_beds', models.CharField(blank=True, max_length=128, null=True)),
                ('unparsed_baths', models.CharField(blank=True, max_length=128, null=True)),
                ('unparsed_sqft', models.CharField(blank=True, max_length=128, null=True)),
                ('s3_rows_count', models.IntegerField(default=0)),
                ('s3_last_modified', models.DateTimeField(blank=True, null=True)),
                ('scrapping_date', models.DateField()),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='compete.Property')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='comparison',
            name='compared_property',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='compared_comparisons', to='compete.Property'),
        ),
        migrations.AddField(
            model_name='comparison',
            name='compared_sub_market',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='compared_comparisons', to='compete.Submarket'),
        ),
        migrations.AddField(
            model_name='comparison',
            name='competitor_property',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='competitor_comparisons', to='compete.Property'),
        ),
        migrations.AddField(
            model_name='comparison',
            name='market',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comparisons', to='compete.Market'),
        ),
        migrations.AddField(
            model_name='comparison',
            name='subject_property',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_comparisons', to='compete.Property'),
        ),
        migrations.AddField(
            model_name='comparison',
            name='subject_sub_market',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_comparisons', to='compete.Submarket'),
        ),
        migrations.AddField(
            model_name='comparison',
            name='submarket',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comparisons', to='compete.Submarket'),
        ),
        migrations.AddField(
            model_name='comparison',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comparisons', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AlertUnitRentLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('unit_type', models.CharField(blank=True, choices=[('STUDIO', 'Studio'), ('ONE_BEDROOM', '1 bedroom'), ('TWO_BEDROOM', '2 bedroom'), ('THREE_BEDROOM', '3 bedroom'), ('FOUR_BEDROOM', '4 bedroom'), ('FIVE_BEDROOM', '5 bedroom'), ('COMBINED', 'Combined')], max_length=32, null=True)),
                ('average_rent', models.FloatField(blank=True, null=True)),
                ('average_rent_last_day', models.FloatField(blank=True, null=True)),
                ('average_rent_last_week', models.FloatField(blank=True, null=True)),
                ('average_rent_last_4_weeks', models.FloatField(blank=True, null=True)),
                ('average_rent_per_sqft', models.FloatField(blank=True, null=True)),
                ('average_rent_per_sqft_last_day', models.FloatField(blank=True, null=True)),
                ('average_rent_per_sqft_last_week', models.FloatField(blank=True, null=True)),
                ('average_rent_per_sqft_last_4_weeks', models.FloatField(blank=True, null=True)),
                ('alert_log_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_unit_rent_logs', to='compete.AlertLogDetail')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='alertlogdetail',
            name='property',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alert_log_details', to='compete.Property'),
        ),
        migrations.AddField(
            model_name='alert',
            name='markets',
            field=models.ManyToManyField(blank=True, related_name='alerts', to='compete.Market'),
        ),
        migrations.AddField(
            model_name='alert',
            name='properties',
            field=models.ManyToManyField(blank=True, related_name='alerts', to='compete.Property'),
        ),
        migrations.AddField(
            model_name='alert',
            name='submarkets',
            field=models.ManyToManyField(blank=True, related_name='alerts', to='compete.Submarket'),
        ),
        migrations.AddField(
            model_name='alert',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PullScrappingDataState',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('compete.history',),
        ),
        migrations.AlterUniqueTogether(
            name='alert',
            unique_together={('name', 'user')},
        ),
    ]
